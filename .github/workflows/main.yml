name: .NET build

on:
  workflow_dispatch:
  push:  

jobs:
  define-version-number:
    name: Calculate SemVer
    runs-on: ubuntu-24.04
    outputs:
      package-version: ${{ steps.version_inc_step.outputs.SEMVER }}
    steps:  
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3.1.3
      with:
        versionSpec: '6.0.x'
        preferLatestVersion: true
    - name: Determine SemVer
      id: version_step
      uses: gittools/actions/gitversion/execute@v3.1.3

    - name: Increment Semver
      shell: pwsh
      id: version_inc_step
      env: 
        currentsemver: ${{steps.version_step.outputs.majorMinorPatch }}  
      run: |
         $semverString = "$Env:currentsemver"
         $semver =  [version]$semverString
         $major = $semver.Major
         $minor = $semver.Minor
         $build = $semver.Build
         $build = $build + 1
         $nextSemver = "$major.$minor.$build"
         Write-Host "Will use next SemVer=$nextSemver" 
         echo "SEMVER=$nextSemver" >> $Env:GITHUB_OUTPUT
    
  build-and-publish:
    permissions:
      packages: write # for pushing GitHub Nuget packages

    name: Build & Deploy
    runs-on: windows-2025
    needs: [ define-version-number ]
    env:
      packageversion: ${{ needs.define-version-number.outputs.package-version }}
      packageid: Booktex.Domain
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: ProduceNuSpec
      shell: pwsh
      env:
        PKGVERS: ${{ needs.define-version-number.outputs.package-version }}
      run: |
          Scripts/ProduceNuSpecFile.ps1 -PackageId Booktex.Domain -Version $Env:PKGVERS -MainProjectFolder Booktex.Domain
          Scripts/ProduceNuSpecFile.ps1 -PackageId Booktex.Html -Version $Env:PKGVERS -MainProjectFolder Booktex.Html

    - name: .NET Build & Pack
      shell: pwsh
      env:
        PKGVERS: ${{ needs.define-version-number.outputs.package-version }}
      run: |
        dotnet build Booktex.Domain/Booktex.Domain.csproj -c Release
        dotnet pack Booktex.Domain/Booktex.Domain.csproj -c Release --artifacts-path ./dist -p:AssemblyVersion=$Env:PKGVERS -p:Version=$Env:PKGVERS
        dotnet build Booktex.Html/Booktex.Html.csproj -c Release
        dotnet pack Booktex.Html/Booktex.Html.csproj -c Release --artifacts-path ./dist -p:AssemblyVersion=$Env:PKGVERS -p:Version=$Env:PKGVERS



    - name: Publish to Nuget package repository
      shell: pwsh
      env:
        actionsuser: ${{ secrets.EUTONIES_GITHUB_ACTIONS_USER }}
        galleryuser: ${{ secrets.EUTONIES_NUGET_GALLERY_USER }}
        gallerykey: ${{ secrets.EUTONIES_NUGET_GALLERY_APIKEY }}

      run: |
        dotnet nuget add source --username $Env:actionsuser --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name "github" "https://nuget.pkg.github.com/Eutonies/index.json"
        $packageFolder = "./dist/package/release"
        $vers = $Env:packageversion
        $versionName = "v$Env:packageversion"
        gh release create $versionName "${packageFolder}/Booktex.Domain.${vers}.nupkg" "${packageFolder}/Booktex.Domain.${vers}.nupkg"
        gh release create $versionName "${packageFolder}/Booktex.Html.${vers}.nupkg" "${packageFolder}/Booktex.Html.${vers}.nupkg"
        dotnet nuget push "${packageFolder}/Booktex.Domain.${vers}.nupkg" --source "github"
        dotnet nuget push "${packageFolder}/Booktex.Html.${vers}.nupkg" --source "github"
        dotnet nuget push "${packageFolder}/Booktex.Domain.${vers}.nupkg" --source "https://api.nuget.org/v3/index.json" --api-key $Env:gallerykey --user $Env:galleryuser
        dotnet nuget push "${packageFolder}/Booktex.Html.${vers}.nupkg" --source "https://api.nuget.org/v3/index.json" --api-key $Env:gallerykey --user $Env:galleryuser
